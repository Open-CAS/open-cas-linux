#!/bin/bash
#
# Copyright(c) 2012-2022 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause
#

. $(dirname $3)/conf_framework

check() {
	cur_name=$(basename $2)
	config_file_path=$1
	if compile_module $cur_name "bio_op(NULL);" "linux/bio.h"
	then
		echo $cur_name "1" >> $config_file_path
	elif compile_module $cur_name "REQ_OP_MASK;" "linux/blk_types.h"
	then
		echo $cur_name "2" >> $config_file_path
	elif compile_module $cur_name "REQ_OP_DISCARD;" "linux/blk_types.h"
	then
		echo $cur_name "3" >> $config_file_path
	elif compile_module $cur_name "REQ_DISCARD;" "linux/blk_types.h"
	then
		echo $cur_name "4" >> $config_file_path
	else
		echo $cur_name "X" >> $config_file_path
	fi
}

apply() {
    case "$1" in
    "1")
		add_define "CAS_IS_DISCARD(bio) \\
			(bio_op(bio) == REQ_OP_DISCARD)"
		add_define "CAS_BIO_DISCARD \\
			(REQ_OP_DISCARD)" ;;
    "2")
		add_define "CAS_IS_DISCARD(bio) \\
			(((CAS_BIO_OP_FLAGS(bio)) & REQ_OP_MASK) == REQ_OP_DISCARD)"
		add_define "CAS_BIO_DISCARD \\
			((REQ_OP_WRITE | REQ_OP_DISCARD))" ;;
    "3")
		add_define "CAS_IS_DISCARD(bio) \\
			((CAS_BIO_OP_FLAGS(bio)) & REQ_OP_DISCARD)"
		add_define "CAS_BIO_DISCARD \\
			((REQ_OP_WRITE | REQ_OP_DISCARD))" ;;
    "4")
		add_define "CAS_IS_DISCARD(bio) \\
			((CAS_BIO_OP_FLAGS(bio)) & REQ_DISCARD)"
		add_define "CAS_BIO_DISCARD \\
			(REQ_WRITE | REQ_DISCARD)" ;;
    *)
        exit 1
    esac
}

conf_run $@
